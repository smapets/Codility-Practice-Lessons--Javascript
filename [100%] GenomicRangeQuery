function solution(S, P, Q) {
// write your code in JavaScript (Node.js 8.9.4)
  let strSet=Array.from(S)
  let A=[];
  let countA=0;
  let C=[];
  let countC=0;
  let G=[];
  let countG=0;
  let T=[];
  let countT=0;
  let solution=[]
  //calculate prefix sums
  for(i=0;i<strSet.length;i++){
    if(strSet[i]==="A"){
    countA++;
    A[i]=countA;
    }else if(strSet[i]!=="A"){
    A[i]=countA
    }
    if(strSet[i]==="C"){
    countC++;
    C[i]=countC;
    }else if(strSet[i]!=="C"){
    C[i]=countC
    }
    if(strSet[i]==="G"){
    countG++;
    G[i]=countG;
    }else if(strSet[i]!=="G"){
    G[i]=countG
    }
    if(strSet[i]==="T"){
    countT++;
    T[i]=countT;
    }else if(strSet[i]!=="T"){
    T[i]=countT
    }
  }
//calculate slice sums
  for(i=0;i<P.length;i++){
  //console.log(A[Q[i]])
  if(T[Q[i]]!==T[P[i]]){
    solution[i]=4
  }else if((T[Q[i]]===T[P[i]]&&P[i]===Q[i])||strSet[P[i]]==="T"){
    if(strSet[P[i]]==="T"){
      solution[i]=4
    }
  }
  if(G[Q[i]]!==G[P[i]]){
    solution[i]=3
  }else if((G[Q[i]]===G[P[i]]&&P[i]===Q[i])||strSet[P[i]]==="G"){
    if(strSet[P[i]]==="G"){
      solution[i]=3
    }
  }
  if(C[Q[i]]!==C[P[i]]){
    solution[i]=2
  }else if((C[Q[i]]===C[P[i]]&&P[i]===Q[i])||strSet[P[i]]==="C"){
    if(strSet[P[i]]==="C"){
      solution[i]=2
    }
  }
  if(A[Q[i]]!==A[P[i]]){
    solution[i]=1
  }else if((A[Q[i]]!==A[P[i]]&&P[i]===Q[i])||strSet[P[i]]==="A"){
    if(strSet[P[i]]==="A"){
      solution[i]=1
    }
  }
  }
  return solution
}
